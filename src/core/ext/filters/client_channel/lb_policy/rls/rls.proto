syntax = "proto3";

package google.lookup.v1alpha1;

message RouteLookupRequest {
  // Full host name of the target server, e.g. firestore.googleapis.com.
  // Only set for gRPC requests; HTTP requests must use key_map explicitly.
  string server = 1;
  // Full path of the request, i.e. "/service/method".
  // Only set for gRPC requests; HTTP requests must use key_map explicitly.
  string path = 2;
  // Target type allows the client to specify what kind of target format it
  // would like from RLS to allow it to find the regional server, e.g. "grpc".
  string target_type = 3;
  // Map of key values extracted via key builders for the gRPC or HTTP request.
  map<string, string> key_map = 4;
}

message RouteLookupResponse {
  // Actual addressable entity to use for routing decision, using syntax
  // requested by the request target_type.
  string target = 1;
  // Optional header value to pass along to AFE in the X-Google-RLS-Data header.
  // Cached with "target" and sent with all requests that match the request key.
  // Allows the RLS to pass its work product to the eventual target.
  string header_data = 2;
}

service RouteLookupService {
  // Lookup returns a target for a single key.
  rpc RouteLookup(RouteLookupRequest) returns (RouteLookupResponse) {}
}

